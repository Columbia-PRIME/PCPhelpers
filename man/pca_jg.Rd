% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pca_jg.R
\name{pca_jg}
\alias{pca_jg}
\title{Crude version of PCA}
\usage{
pca_jg(mat, rank = 1, true_pattern = NULL, cov_method = "complete.obs")
}
\arguments{
\item{mat}{The matrix to perform PCA upon.}

\item{rank}{The rank of the given matrix.}

\item{true_pattern}{The pattern the matrix was simulated from (optional).}

\item{cov_method}{The method with which to calculate the covariance matrix. Only relevant when \code{true_pattern} is left \code{NULL}.
Default=\code{"complete.obs"}. See \code{\link[stats]{cov}}.
Will likely need to pass \code{"pairwise.complete.obs"} for matrices with many missing values.}
}
\value{
List containing: \code{"fitted_mat", "scores", "pattern"}.
\describe{
  \item{\code{"fitted_mat"}}{The recovered matrix (after regressing rows on patterns to estimate scores).}
  \item{\code{"scores"}}{The estimated scores (estimated by regressing rows on patterns).}
  \item{\code{"pattern"}}{The estimated pattern (if none was provided).}
}
}
\description{
\code{pca_jg} performs a crude PCA given a matrix and the rank of the matrix.
}
\section{Methods}{

If \code{true_pattern} is left \code{NULL} then the pattern is estimated via an
eigen decomposition on the covariance matrix of \code{mat}.
The scores are estimated by regressing rows on the pattern provided/estimated.
The fitted values are then estimated by multiplying the estimated scores by the provided/estimated patterns.
}

\examples{
# simulate a matrix:

pattern <- t(cbind(c(1,1,1,0,0), c(0,0,0,1,1)))
scores <- matrix(rnorm(10), 5, 2)
mat <- scores \%*\% pattern

# run PCA:

pca_jg(mat, rank = 2, true_pattern = pattern)
}
